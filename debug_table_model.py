#!/usr/bin/env python3
import sys
import os
sys.path.append('/home/alex/projects/sql/femcl')

from config.config_loader import ConfigLoader
from src.classes.table_model import TableModel

def debug_table_model():
    """–û—Ç–ª–∞–¥–∫–∞ TableModel"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ TableModel –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã accnt")
    print("=" * 50)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_loader = ConfigLoader()
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å —Ç–∞–±–ª–∏—Ü—ã
        table_model = TableModel("accnt")
        
        print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏...")
        if table_model.load_columns(config_loader):
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: {len(table_model.columns)}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–ª–æ–Ω–æ–∫")
            return False
        
        print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
        if table_model.load_indexes(config_loader):
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤: {len(table_model.indexes)}")
            
            for i, index in enumerate(table_model.indexes, 1):
                print(f"\n{i}. {index.name}")
                print(f"   –¢–∏–ø: {index.index_type}")
                print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã–π: {index.is_unique}")
                print(f"   –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á: {index.is_primary_key}")
                print(f"   –°—Ç–∞—Ç—É—Å: {index.migration_status}")
                print(f"   –ö–æ–ª–æ–Ω–∫–∏: {len(index.columns)}")
                
                if index.columns:
                    print("   –î–µ—Ç–∞–ª–∏ –∫–æ–ª–æ–Ω–æ–∫:")
                    for col in index.columns:
                        direction = "DESC" if col.is_descending else "ASC"
                        print(f"     - {col.column_name} {direction} (–ø–æ–∑–∏—Ü–∏—è: {col.ordinal_position})")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–µ–∫—Å–æ–≤")
            if table_model.errors:
                print("–û—à–∏–±–∫–∏:")
                for error in table_model.errors:
                    print(f"  - {error}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = debug_table_model()
    sys.exit(0 if success else 1)