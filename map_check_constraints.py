#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Ñ—É–Ω–∫—Ü–∏–π –≤ CHECK constraints
"""

import psycopg2
from rich.console import Console

console = Console()

def map_check_constraints_functions(task_id: int):
    """–ú–∞–ø–ø–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–π –≤ CHECK constraints –¥–ª—è –∑–∞–¥–∞—á–∏"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = psycopg2.connect(
        dbname='fish_eye',
        user='postgres',
        password='postgres',
        host='localhost',
        port='5432'
    )
    cursor = conn.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ CHECK constraints —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏
        cursor.execute('''
            SELECT 
                pcc.id,
                pcc.definition,
                pt.object_name,
                pcc.constraint_name
            FROM mcl.postgres_check_constraints pcc
            JOIN mcl.postgres_check_constraint_columns pccc ON pcc.id = pccc.check_constraint_id
            JOIN mcl.postgres_columns pc ON pccc.column_id = pc.id
            JOIN mcl.postgres_tables pt ON pc.table_id = pt.id
            JOIN mcl.mssql_tables mt ON pt.source_table_id = mt.id
            WHERE mt.task_id = %s
                AND pcc.definition IS NOT NULL
                AND pcc.function_mapping_rule_id IS NULL
        ''', (task_id,))
        
        check_constraints = cursor.fetchall()
        
        console.print(f'üîç –ù–∞–π–¥–µ–Ω–æ CHECK constraints —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏: {len(check_constraints)}')
        
        processed_count = 0
        
        for constraint_id, definition, table_name, constraint_name in check_constraints:
            console.print(f'  üìã –û–±—Ä–∞–±–æ—Ç–∫–∞: {constraint_name} –≤ —Ç–∞–±–ª–∏—Ü–µ {table_name}')
            console.print(f'     –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {definition[:100]}...')
            
            # –ü—Ä–æ—Å—Ç–æ–π –º–∞–ø–ø–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–π (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
            postgres_definition = definition
            
            # –ú–∞–ø–ø–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            if 'getdate()' in postgres_definition:
                postgres_definition = postgres_definition.replace('getdate()', 'CURRENT_TIMESTAMP')
            
            if 'isnull(' in postgres_definition:
                postgres_definition = postgres_definition.replace('isnull(', 'COALESCE(')
            
            if 'len(' in postgres_definition:
                postgres_definition = postgres_definition.replace('len(', 'LENGTH(')
            
            if 'upper(' in postgres_definition:
                postgres_definition = postgres_definition.replace('upper(', 'UPPER(')
            
            if 'lower(' in postgres_definition:
                postgres_definition = postgres_definition.replace('lower(', 'LOWER(')
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
            cursor.execute('''
                UPDATE mcl.postgres_check_constraints 
                SET 
                    postgres_definition = %s,
                    mapping_status = 'mapped',
                    mapping_complexity = 'simple',
                    mapping_notes = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞–ø–ø–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π'
                WHERE id = %s
            ''', (postgres_definition, constraint_id))
            
            processed_count += 1
            
            if postgres_definition != definition:
                console.print(f'     ‚úÖ –ú–∞–ø–ø–∏–Ω–≥ –ø—Ä–∏–º–µ–Ω–µ–Ω')
            else:
                console.print(f'     ‚ÑπÔ∏è  –ú–∞–ø–ø–∏–Ω–≥ –Ω–µ —Ç—Ä–µ–±–æ–≤–∞–ª—Å—è')
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        console.print(f'\\n‚úÖ –ú–∞–ø–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
        console.print(f'üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ CHECK constraints: {processed_count}')
        
        return processed_count
        
    except Exception as e:
        console.print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        conn.rollback()
        return 0
        
    finally:
        conn.close()

if __name__ == '__main__':
    console.print('üöÄ –ó–∞–ø—É—Å–∫ –º–∞–ø–ø–∏–Ω–≥–∞ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è CHECK CONSTRAINTS...')
    result = map_check_constraints_functions(2)
    console.print(f'\\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {result} CHECK constraints')