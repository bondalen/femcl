#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–¥—É–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏
"""
import os
import sys
import time
from rich.console import Console
from rich.panel import Panel

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/alex/projects/sql/femcl')

from scripts.migration.monitoring_reporter import MigrationMonitor

console = Console()

def test_monitoring_start_stop():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    console.print("[bold blue]üß™ –¢–ï–°–¢ 1: –ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        success = monitor.start_monitoring()
        if success:
            console.print("   ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ
            time.sleep(2)
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            monitor.stop_monitoring()
            console.print("   ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            return True
        else:
            console.print("   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_real_time_metrics():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
        metrics = monitor.get_real_time_metrics()
        
        if metrics:
            console.print("   ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            console.print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç—Ä–∏–∫: {len(metrics.get('metrics', {}))}")
            console.print(f"   üìà –°—Ç–∞—Ç—É—Å–æ–≤ —Ç–∞–±–ª–∏—Ü: {len(metrics.get('status_breakdown', {}))}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            if 'metrics' in metrics:
                for metric_name, metric_data in metrics['metrics'].items():
                    console.print(f"      - {metric_name}: {metric_data.get('value', 0):.2f} {metric_data.get('unit', '')}")
            
            return True
        else:
            console.print("   ‚ùå –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_progress_report():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
        report = monitor.generate_progress_report()
        
        if report:
            console.print("   ‚úÖ –û—Ç—á—ë—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –æ—Ç—á—ë—Ç–∞
            if 'overall_progress' in report:
                progress = report['overall_progress']
                console.print(f"   üìä –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {progress.get('completion_percentage', 0):.1f}%")
                console.print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {progress.get('completed_tables', 0)}")
                console.print(f"   ‚ùå –û—à–∏–±–æ–∫: {progress.get('failed_tables', 0)}")
            
            if 'time_metrics' in report:
                time_metrics = report['time_metrics']
                console.print(f"   ‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏: {time_metrics.get('avg_duration_seconds', 0):.1f} —Å–µ–∫")
                console.print(f"   üìÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {time_metrics.get('completed_today', 0)}")
            
            if 'error_metrics' in report:
                error_metrics = report['error_metrics']
                console.print(f"   üîÑ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {error_metrics.get('avg_attempts', 0):.1f}")
                console.print(f"   üìä –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {error_metrics.get('total_errors', 0)}")
            
            return True
        else:
            console.print("   ‚ùå –û—Ç—á—ë—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_performance_report():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        report = monitor.generate_performance_report()
        
        if report:
            console.print("   ‚úÖ –û—Ç—á—ë—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            if 'performance_metrics' in report:
                perf_metrics = report['performance_metrics']
                console.print(f"   üìä –ú–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {len(perf_metrics)}")
                
                for metric_name, metric_data in perf_metrics.items():
                    console.print(f"      - {metric_name}: {metric_data.get('avg_value', 0):.2f} (—Å—Ä–µ–¥–Ω–µ–µ)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —Ñ–∞–∑–∞–º
            if 'phase_metrics' in report:
                phase_metrics = report['phase_metrics']
                console.print(f"   üìà –§–∞–∑ –º–∏–≥—Ä–∞—Ü–∏–∏: {len(phase_metrics)}")
                
                for phase, phase_data in phase_metrics.items():
                    console.print(f"      - {phase}: {phase_data.get('table_count', 0)} —Ç–∞–±–ª–∏—Ü")
            
            return True
        else:
            console.print("   ‚ùå –û—Ç—á—ë—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_error_analysis_report():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –æ–± –∞–Ω–∞–ª–∏–∑–µ –æ—à–∏–±–æ–∫"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ–± –∞–Ω–∞–ª–∏–∑–µ –æ—à–∏–±–æ–∫[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ–± –æ—à–∏–±–∫–∞—Ö
        report = monitor.generate_error_analysis_report()
        
        if report:
            console.print("   ‚úÖ –û—Ç—á—ë—Ç –æ–± –∞–Ω–∞–ª–∏–∑–µ –æ—à–∏–±–æ–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—à–∏–±–æ–∫
            if 'error_statistics' in report:
                error_stats = report['error_statistics']
                console.print(f"   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫ –æ—à–∏–±–æ–∫: {len(error_stats)}")
                
                for stat in error_stats:
                    console.print(f"      - {stat.get('current_status', 'Unknown')}: {stat.get('count', 0)} –æ—à–∏–±–æ–∫")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
            if 'error_types' in report:
                error_types = report['error_types']
                console.print(f"   üîç –¢–∏–ø–æ–≤ –æ—à–∏–±–æ–∫: {len(error_types)}")
                
                for error_type in error_types[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    console.print(f"      - {error_type.get('event_type', 'Unknown')}: {error_type.get('count', 0)} —Ä–∞–∑")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            if 'problematic_tables' in report:
                problematic = report['problematic_tables']
                console.print(f"   üî• –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(problematic)}")
                
                for table in problematic[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    console.print(f"      - {table.get('table_name', 'Unknown')}: {table.get('attempt_count', 0)} –ø–æ–ø—ã—Ç–æ–∫")
            
            return True
        else:
            console.print("   ‚ùå –û—Ç—á—ë—Ç –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –æ–± –æ—à–∏–±–∫–∞—Ö: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_dashboard_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 6: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞
        dashboard = monitor.create_dashboard()
        
        if dashboard:
            console.print("   ‚úÖ –î–∞—à–±–æ—Ä–¥ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            console.print(f"   üìä –†–∞–∑–º–µ—Ä HTML: {len(dashboard)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã HTML
            if '<html>' in dashboard and '</html>' in dashboard:
                console.print("   ‚úÖ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            
            if 'Chart.js' in dashboard:
                console.print("   ‚úÖ Chart.js –ø–æ–¥–∫–ª—é—á—ë–Ω")
            
            if 'Migration Dashboard' in dashboard:
                console.print("   ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞—à–±–æ—Ä–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            os.makedirs('/home/alex/projects/sql/femcl/reports', exist_ok=True)
            with open('/home/alex/projects/sql/femcl/reports/test_dashboard.html', 'w', encoding='utf-8') as f:
                f.write(dashboard)
            console.print("   üíæ –î–∞—à–±–æ—Ä–¥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ reports/test_dashboard.html")
            
            return True
        else:
            console.print("   ‚ùå –î–∞—à–±–æ—Ä–¥ –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_notification_sending():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 7: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        success = monitor.send_notification(
            event_type='TEST_EVENT',
            message='–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏',
            severity='INFO'
        )
        
        if success:
            console.print("   ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
            success_error = monitor.send_notification(
                event_type='CRITICAL_ERROR',
                message='–¢–µ—Å—Ç–æ–≤–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞',
                severity='CRITICAL'
            )
            
            if success_error:
                console.print("   ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                return True
            else:
                console.print("   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                return False
        else:
            console.print("   ‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_report_export():
    """–¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á—ë—Ç–æ–≤"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 8: –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–æ–≤[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        report_data = monitor.generate_progress_report()
        
        if not report_data:
            console.print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
            return False
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
        json_file = monitor.export_report('JSON', report_data)
        if json_file and os.path.exists(json_file):
            console.print(f"   ‚úÖ JSON –æ—Ç—á—ë—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {json_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = os.path.getsize(json_file)
            console.print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        else:
            console.print("   ‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ JSON")
            return False
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV
        csv_file = monitor.export_report('CSV', report_data)
        if csv_file and os.path.exists(csv_file):
            console.print(f"   ‚úÖ CSV –æ—Ç—á—ë—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {csv_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = os.path.getsize(csv_file)
            console.print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        else:
            console.print("   ‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV")
            return False
        
        return True
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á—ë—Ç–æ–≤: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_live_dashboard():
    """–¢–µ—Å—Ç –∂–∏–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞ (–∫—Ä–∞—Ç–∫–∏–π)"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 9: –¢–µ—Å—Ç –∂–∏–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        console.print("   üìä –ó–∞–ø—É—Å–∫ –∂–∏–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        monitor.start_monitoring()
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–∏–π –ø–æ–∫–∞–∑ –¥–∞—à–±–æ—Ä–¥–∞
        console.print("   ‚úÖ –ñ–∏–≤–æ–π –¥–∞—à–±–æ—Ä–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∏–º–∏—Ç–∞—Ü–∏—è)")
        console.print("   üìà –ú–µ—Ç—Ä–∏–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        console.print("   üéØ –ì—Ä–∞—Ñ–∏–∫–∏ –∏ —Ç–∞–±–ª–∏—Ü—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        monitor.stop_monitoring()
        
        return True
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –∂–∏–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞: {e}[/red]")
        return False
    finally:
        monitor.close()

def test_metrics_collection():
    """–¢–µ—Å—Ç —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫"""
    console.print("\n[bold blue]üß™ –¢–ï–°–¢ 10: –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫[/bold blue]")
    
    monitor = MigrationMonitor()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫
        monitor.start_monitoring()
        
        # –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫
        time.sleep(3)
        
        # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
        metrics = monitor.get_real_time_metrics()
        
        if metrics:
            console.print("   ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±—Ä–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
            metrics_data = metrics.get('metrics', {})
            expected_metrics = ['progress_percentage', 'completed_tables', 'failed_tables']
            
            found_metrics = 0
            for expected in expected_metrics:
                if expected in metrics_data:
                    found_metrics += 1
                    console.print(f"   üìä {expected}: {metrics_data[expected].get('value', 0):.2f}")
            
            console.print(f"   üìà –ù–∞–π–¥–µ–Ω–æ –º–µ—Ç—Ä–∏–∫: {found_metrics}/{len(expected_metrics)}")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            monitor.stop_monitoring()
            
            return found_metrics >= len(expected_metrics) // 2  # –•–æ—Ç—è –±—ã –ø–æ–ª–æ–≤–∏–Ω–∞ –º–µ—Ç—Ä–∏–∫
        else:
            console.print("   ‚ùå –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ —Å–æ–±—Ä–∞–Ω—ã")
            return False
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫: {e}[/red]")
        return False
    finally:
        monitor.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    console.print(Panel.fit(
        "[bold green]üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–£–õ–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ò –û–¢–ß–Å–¢–ù–û–°–¢–ò[/bold green]\n"
        "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π MigrationMonitor",
        border_style="green"
    ))
    
    tests = [
        ("–ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", test_monitoring_start_stop),
        ("–ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏", test_real_time_metrics),
        ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ", test_progress_report),
        ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", test_performance_report),
        ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ–± –∞–Ω–∞–ª–∏–∑–µ –æ—à–∏–±–æ–∫", test_error_analysis_report),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞", test_dashboard_creation),
        ("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", test_notification_sending),
        ("–≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–æ–≤", test_report_export),
        ("–¢–µ—Å—Ç –∂–∏–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞", test_live_dashboard),
        ("–°–±–æ—Ä –º–µ—Ç—Ä–∏–∫", test_metrics_collection)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        console.print(f"\n{'='*60}")
        try:
            result = test_func()
            results.append((test_name, result))
            if result:
                console.print(f"[green]‚úÖ {test_name}: –ü–†–û–ô–î–ï–ù[/green]")
            else:
                console.print(f"[red]‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù[/red]")
        except Exception as e:
            console.print(f"[red]‚ùå {test_name}: –û–®–ò–ë–ö–ê - {e}[/red]")
            results.append((test_name, False))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    console.print(f"\n{'='*60}")
    console.print("[bold blue]üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:[/bold blue]")
    
    passed = sum(1 for _, result in results if result)
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        console.print(f"  {test_name}: {status}")
    
    console.print(f"\n[bold green]–†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ[/bold green]")
    
    if passed == total:
        console.print("[bold green]üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û![/bold green]")
    else:
        console.print("[bold red]üí• –ï–°–¢–¨ –ü–†–û–í–ê–õ–ï–ù–ù–´–ï –¢–ï–°–¢–´[/bold red]")

if __name__ == "__main__":
    main()