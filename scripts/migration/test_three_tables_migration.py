#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–∞–≤–∏–ª –º–∏–≥—Ä–∞—Ü–∏–∏
"""
import os
import sys
import time
from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich.progress import Progress, BarColumn, TextColumn, TimeElapsedColumn

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/alex/projects/sql/femcl')

from scripts.migration.migration_coordinator import MigrationCoordinator, MigrationState

console = Console()

def test_three_tables_migration():
    """–¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü"""
    console.print(Panel.fit(
        "[bold green]üß™ –¢–ï–°–¢ –ú–ò–ì–†–ê–¶–ò–ò –¢–†–Å–• –¢–ê–ë–õ–ò–¶[/bold green]\n"
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∞–≤–∏–ª –º–∏–≥—Ä–∞—Ü–∏–∏",
        border_style="green"
    ))
    
    # –°–æ–∑–¥–∞—ë–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
    coordinator = MigrationCoordinator()
    
    try:
        # –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
        console.print("\n[bold blue]üìã –®–ê–ì 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        init_success = coordinator.initialize_migration_system()
        
        if not init_success:
            console.print("[red]‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã[/red]")
            return False
        
        console.print("[green]‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ[/green]")
        
        # –®–∞–≥ 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        console.print("\n[bold blue]üîç –®–ê–ì 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        readiness = coordinator.validate_migration_readiness()
        
        console.print(f"   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {readiness['readiness_percentage']:.1f}%")
        console.print(f"   ‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {readiness['is_ready']}")
        
        if readiness['issues']:
            console.print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã:")
            for issue in readiness['issues']:
                console.print(f"      - {issue}")
        
        if not readiness['is_ready']:
            console.print("[red]‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –º–∏–≥—Ä–∞—Ü–∏–∏[/red]")
            return False
        
        # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
        console.print("\n[bold blue]üìã –®–ê–ì 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        plan = coordinator.get_migration_plan()
        
        console.print(f"   üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –ø–ª–∞–Ω–µ: {plan['total_tables']}")
        console.print(f"   üîó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {plan['critical_dependencies']}")
        console.print(f"   ‚è±Ô∏è –û—Ü–µ–Ω–æ—á–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {plan['estimated_duration_hours']:.1f} —á–∞—Å–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ç–∞–±–ª–∏—Ü –∏–∑ –ø–ª–∞–Ω–∞
        console.print("   üìù –ü–µ—Ä–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø–ª–∞–Ω–µ:")
        for i, table in enumerate(plan['tables'][:10]):
            console.print(f"      {i+1}. {table}")
        
        # –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
        console.print("\n[bold blue]üè• –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã[/bold blue]")
        health = coordinator.get_system_health()
        
        console.print(f"   üè• –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: {health['overall_status']}")
        console.print(f"   ‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏: {health['has_errors']}")
        console.print(f"   üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(health['components'])}")
        
        for component, status in health['components'].items():
            console.print(f"      - {component}: {status['status']}")
        
        # –®–∞–≥ 5: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
        console.print("\n[bold blue]üìä –®–ê–ì 5: –î–∞—à–±–æ—Ä–¥ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        coordinator.display_status_dashboard()
        
        # –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ (–∏–º–∏—Ç–∞—Ü–∏—è)
        console.print("\n[bold blue]üöÄ –®–ê–ì 6: –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü[/bold blue]")
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –ø–ª–∞–Ω–∞
        test_tables = plan['tables'][:3]
        console.print(f"   üéØ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {', '.join(test_tables)}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        start_success = coordinator.start_migration_process()
        
        if not start_success:
            console.print("[red]‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏[/red]")
            return False
        
        console.print("[green]‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ[/green]")
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
        console.print("\n[bold blue]üìà –®–ê–ì 7: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        
        with Progress(
            TextColumn("[progress.description]{task.description}"),
            BarColumn(),
            TextColumn("[progress.percentage]{task.percentage:>3.0f}%"),
            TimeElapsedColumn(),
            console=console
        ) as progress:
            
            # –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            main_task = progress.add_task("–ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü", total=100)
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –º–∏–≥—Ä–∞—Ü–∏–∏
            for i in range(10):
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
                status = coordinator.get_migration_status()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                progress_percentage = status['progress']['percentage']
                progress.update(main_task, completed=progress_percentage)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
                if i % 3 == 0:  # –ö–∞–∂–¥—ã–µ 3 –∏—Ç–µ—Ä–∞—Ü–∏–∏
                    console.print(f"   üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress_percentage:.1f}%")
                    console.print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {status['progress']['completed']}")
                    console.print(f"   üìã –í—Å–µ–≥–æ: {status['progress']['total']}")
                    console.print(f"   ‚ùå –û—à–∏–±–æ–∫: {status['error_count']}")
                
                time.sleep(1)  # –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
        
        # –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        console.print("\n[bold blue]üìä –®–ê–ì 8: –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        
        final_status = coordinator.get_migration_status()
        
        # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        results_table = Table(title="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü")
        results_table.add_column("–ú–µ—Ç—Ä–∏–∫–∞", style="cyan")
        results_table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green")
        results_table.add_column("–ï–¥–∏–Ω–∏—Ü–∞", style="yellow")
        
        results_table.add_row("–°–æ—Å—Ç–æ—è–Ω–∏–µ", final_status['state'], "")
        results_table.add_row("–ü—Ä–æ–≥—Ä–µ—Å—Å", f"{final_status['progress']['percentage']:.1f}", "%")
        results_table.add_row("–ó–∞–≤–µ—Ä—à–µ–Ω–æ", str(final_status['progress']['completed']), "—Ç–∞–±–ª–∏—Ü")
        results_table.add_row("–í—Å–µ–≥–æ", str(final_status['progress']['total']), "—Ç–∞–±–ª–∏—Ü")
        results_table.add_row("–û—à–∏–±–æ–∫", str(final_status['error_count']), "—à—Ç")
        
        if final_status['runtime_seconds']:
            results_table.add_row("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", f"{final_status['runtime_seconds']:.1f}", "—Å–µ–∫")
        
        console.print(results_table)
        
        # –®–∞–≥ 9: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
        console.print("\n[bold blue]üõë –®–ê–ì 9: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏[/bold blue]")
        
        stop_success = coordinator.stop_migration()
        
        if stop_success:
            console.print("[green]‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ[/green]")
        else:
            console.print("[red]‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–∏[/red]")
            return False
        
        # –®–∞–≥ 10: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
        console.print("\n[bold blue]üìã –®–ê–ì 10: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç[/bold blue]")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        final_health = coordinator.get_system_health()
        
        console.print(f"   üè• –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã: {final_health['overall_status']}")
        console.print(f"   üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {len([c for c in final_health['components'].values() if c['status'] == 'HEALTHY'])}")
        
        if final_health['has_errors']:
            console.print("   üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏:")
            for error in final_health['errors']:
                console.print(f"      - {error}")
        else:
            console.print("   ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–µ—Å—Ç–æ–≤—ã–º —Ç–∞–±–ª–∏—Ü–∞–º
        console.print(f"   üéØ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {', '.join(test_tables)}")
        console.print("   üìà –°—Ç–∞—Ç—É—Å: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        console.print(f"[red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}[/red]")
        return False
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
        coordinator.close()

def test_individual_components():
    """–¢–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã"""
    console.print("\n[bold blue]üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤[/bold blue]")
    
    coordinator = MigrationCoordinator()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        coordinator.initialize_migration_system()
        
        # –¢–µ—Å—Ç TableListManager
        console.print("   üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TableListManager...")
        progress = coordinator.table_manager.get_migration_progress()
        console.print(f"      üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress['percentage']:.1f}%")
        console.print(f"      ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {progress['completed']}")
        console.print(f"      üìã –í—Å–µ–≥–æ: {progress['total']}")
        
        # –¢–µ—Å—Ç DependencyAnalyzer
        console.print("   üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DependencyAnalyzer...")
        migration_order = coordinator.dependency_analyzer.get_migration_order()
        console.print(f"      üìã –ü–æ—Ä—è–¥–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: {len(migration_order)} —Ç–∞–±–ª–∏—Ü")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–∞–±–ª–∏—Ü
        console.print("      üéØ –ü–µ—Ä–≤—ã–µ 5 —Ç–∞–±–ª–∏—Ü:")
        for i, table in enumerate(migration_order[:5]):
            console.print(f"         {i+1}. {table}")
        
        # –¢–µ—Å—Ç MigrationMonitor
        console.print("   üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MigrationMonitor...")
        metrics = coordinator.monitor.get_real_time_metrics()
        console.print(f"      üìà –ú–µ—Ç—Ä–∏–∫: {len(metrics.get('metrics', {}))}")
        console.print(f"      üìä –°—Ç–∞—Ç—É—Å–æ–≤: {len(metrics.get('status_breakdown', {}))}")
        
        console.print("   ‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}[/red]")
        return False
    finally:
        coordinator.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    console.print(Panel.fit(
        "[bold green]üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ú–ò–ì–†–ê–¶–ò–ò[/bold green]\n"
        "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π",
        border_style="green"
    ))
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
    console.print("\n" + "="*80)
    console.print("[bold blue]–û–°–ù–û–í–ù–û–ô –¢–ï–°–¢: –ú–∏–≥—Ä–∞—Ü–∏—è —Ç—Ä—ë—Ö —Ç–∞–±–ª–∏—Ü[/bold blue]")
    console.print("="*80)
    
    main_test_success = test_three_tables_migration()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.print("\n" + "="*80)
    console.print("[bold blue]–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤[/bold blue]")
    console.print("="*80)
    
    components_test_success = test_individual_components()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    console.print("\n" + "="*80)
    console.print("[bold blue]üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø[/bold blue]")
    console.print("="*80)
    
    if main_test_success:
        console.print("[green]‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏: –ü–†–û–ô–î–ï–ù[/green]")
    else:
        console.print("[red]‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏: –ü–†–û–í–ê–õ–ï–ù[/red]")
    
    if components_test_success:
        console.print("[green]‚úÖ –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: –ü–†–û–ô–î–ï–ù[/green]")
    else:
        console.print("[red]‚ùå –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: –ü–†–û–í–ê–õ–ï–ù[/red]")
    
    if main_test_success and components_test_success:
        console.print("\n[bold green]üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û![/bold green]")
        console.print("[green]‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é[/green]")
    else:
        console.print("\n[bold red]üí• –ï–°–¢–¨ –ü–†–û–í–ê–õ–ï–ù–ù–´–ï –¢–ï–°–¢–´[/bold red]")
        console.print("[red]‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞[/red]")

if __name__ == "__main__":
    main()