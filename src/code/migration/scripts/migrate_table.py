#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
FEMCL - –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª–∞—Å—Å—ã –∏–∑ src/classes –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
"""

import sys
import os
import argparse
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', '..', '..'))

from src.code.migration.classes.table_migrator import TableMigrator
from src.code.infrastructure.config.config_loader import ConfigLoader


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞"""
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser(description='FEMCL - –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã')
    parser.add_argument('table_name', help='–ò–º—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏')
    parser.add_argument('--force', action='store_true', help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã')
    parser.add_argument('--verbose', '-v', action='store_true', help='–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥')
    
    args = parser.parse_args()
    
    print(f"üöÄ FEMCL - –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã: {args.table_name}")
    print(f"üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üîß –†–µ–∂–∏–º: {'–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π' if args.force else '–û–±—ã—á–Ω—ã–π'}")
    print("-" * 60)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_loader = ConfigLoader()
        
        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ç–æ—Ä
        migrator = TableMigrator(
            table_name=args.table_name,
            config_loader=config_loader,
            force=args.force,
            verbose=args.verbose
        )
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        result = migrator.migrate()
        
        if result['success']:
            print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã {args.table_name} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result.get('duration', 'N/A')}")
            print(f"üìä –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ —Å—Ç—Ä–æ–∫: {result.get('rows_migrated', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {args.table_name}")
            print(f"üîç –î–µ—Ç–∞–ª–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            sys.exit(1)
            
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()