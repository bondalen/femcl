#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–µ–∫—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.config_loader import ConfigLoader
from src.classes.table_model import TableModel


def test_index_loading():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã accnt"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã accnt")
    print("=" * 60)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_loader = ConfigLoader()
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å —Ç–∞–±–ª–∏—Ü—ã
        table_model = TableModel("accnt")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        if not table_model.load_metadata(config_loader):
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö")
            return False
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: {len(table_model.columns)}")
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤: {len(table_model.indexes)}")
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–¥–µ–∫—Å–∞—Ö
        if table_model.indexes:
            print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω–¥–µ–∫—Å–∞—Ö:")
            for i, index in enumerate(table_model.indexes, 1):
                print(f"\n{i}. {index.name}")
                print(f"   –¢–∏–ø: {index.index_type}")
                print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã–π: {index.is_unique}")
                print(f"   –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á: {index.is_primary_key}")
                print(f"   –°—Ç–∞—Ç—É—Å: {index.migration_status}")
                print(f"   –ö–æ–ª–æ–Ω–∫–∏: {len(index.columns)}")
                
                if index.columns:
                    print("   –î–µ—Ç–∞–ª–∏ –∫–æ–ª–æ–Ω–æ–∫:")
                    for col in index.columns:
                        direction = "DESC" if col.is_descending else "ASC"
                        print(f"     - {col.column_name} {direction} (–ø–æ–∑–∏—Ü–∏—è: {col.ordinal_position})")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
                try:
                    create_sql = index.generate_create_sql()
                    print(f"   SQL: {create_sql}")
                except Exception as e:
                    print(f"   –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL: {e}")
        else:
            print("‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = test_index_loading()
    sys.exit(0 if success else 1)
